
services:
  db: 
    image: postgres:16
    container_name: postgres
    restart: always
    environment:
      - POSTGRES_USER=me
      - POSTGRES_PASSWORD=pwd
      - POSTGRES_DB=postgres
    volumes:
      - database_files:/var/lib/postgresql/data
    networks:
      - transcendence
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U me -d postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
  
  backend: 
    build: 
      context: ./app/backend
      dockerfile: Dockerfile
    container_name: backend
    restart: always
    ports: 
      - '3001:3001'
      - '5555:5555'
    volumes:
      - app:/app
    depends_on:
      - db
    networks:
      - transcendence
    # command: ["setup:dev"]
    # command: ["deploy"]
    command: ["restart:dev"]
    
  frontend:
    depends_on:
      - backend
    build: 
      context: ./app/frontend
      dockerfile: Dockerfile
    container_name: frontend
    restart: always
    ports:
      - '3000:3000'
    volumes:
      - app:/app
    networks:
      - transcendence
    command: ["dev"]
    # TODO: fix frontend deploy command
    # command: ["deploy"]

networks:
  transcendence:

volumes:
  database_files:
    driver: local
    driver_opts:
      device: ./app/postgres_db
      o: bind
      type: none
  
  app:
    driver: local
    driver_opts:
      device: ./app
      o: bind
      type: none
