
services:
  db: 
    image: postgres:16
    container_name: postgres
    restart: always
    environment:
      - POSTGRES_USER=me
      - POSTGRES_PASSWORD=pwd
      - POSTGRES_DB=transcendence
    volumes:
      - database_files:/var/lib/postgresql/data
    networks:
      - transcendence
    # healthcheck:
    #   test: ["CMD-SHELL", "pg_isready -U me -d transcendence"]
    #   interval: 10s
    #   timeout: 5s
    #   retries: 5
  
  backend: 
    build: 
      context: ./app
      dockerfile: ./backend/Dockerfile
    image: backend
    pull_policy: never
    container_name: backend
    restart: always
    # env_file:
    #   - ./backend/.env
    ports: 
      - '3001:3001'
      - '5555:5555'
    volumes:
      - ./app:/app
      - node_modules:/node_modules
    depends_on:
      - db
    networks:
      - transcendence
    # Default command will run "start", uncommend below to run "start:watch" for development 
    command: start:dev
    
  frontend:
    depends_on:
      - backend
    build: 
      context: ./app/frontend
      dockerfile: Dockerfile
    image: frontend
    pull_policy: never
    container_name: frontend
    restart: always
    ports:
      - '3000:3000'
    volumes:
      - ./app:/app
      - node_modules:/node_modules
    networks:
      - transcendence
    # Default command will run "deploy", uncommend below to run "dev" for development 
    command: ["dev"]

networks:
  transcendence:
    name: transcendence 

volumes:
  database_files:
    name: database_files
  node_modules:
    name: node_modules

